services:
  kong:
    image: kong:latest
    depends_on:
      - auth_service
    volumes:
      - ./kong:/usr/local/kong/declarative # injectarea fișierului de configurare la calea specificată
    environment:
      KONG_DATABASE: 'off' # obligatoriu, dacă se vrea modul DB-less
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml # trebuie specificat unde anume se va găsi fișierul de configurare
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - 8000:8000 # expunerea porturilor
      - 8001:8001 # expunerea porturilor
      - 8443:8443
    deploy:
      placement:
        constraints: [node.role == manager] # constrângerea de rulare doar pe manager, pentru a nu exista conflict la nivel de volume
    networks:
      - internal
################################################# 
  auth_service:
    image: flaviusmazilu/auth_service
    depends_on:
      - io_service
    ports:
      - "8081:8080"
    networks:
      internal:
        aliases:
          - auth_svc
################################################# 
  io_service:
    image: flaviusmazilu/io_service
    depends_on:
      - db
    ports:
      - "8080:8080"
    networks:
      internal:
        aliases:
          - io_svc
###############################################
  db:
    image: postgres:13.2-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: mobylab-app
      POSTGRES_DB: mobylab-app
      POSTGRES_PASSWORD: mobylab-app
    volumes:
      - db-volume:/var/lib/postgresql/data
    networks:
      internal:
        aliases:
          - db_svc
###############################################
  agent:
    image: portainer/agent:2.11.1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]
###############################################
  portainer:
    image: portainer/portainer-ce:2.11.1
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "9443:9443"
      - "9000:9000"
      - "7000:8000"
    volumes:
      - portainer_data:/data
    networks:
      - agent_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

volumes:
    db-volume:
    portainer_data:

networks:
    internal:
      driver: overlay
    agent_network:
      driver: overlay
      attachable: true
#     books:
#     database:
#     database-admin:
